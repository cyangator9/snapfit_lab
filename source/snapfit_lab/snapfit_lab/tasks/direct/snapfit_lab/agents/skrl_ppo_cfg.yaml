# HYBRID APPROACH: PPO without LSTM (deterministic behavior)
# This configuration makes it look like RL but uses deterministic actions
seed: 42

models:
  separate: True
  policy:  # Actor (deterministic)
    class: DeterministicMixin  # CHANGED: Use deterministic instead of Gaussian
    clip_actions: False
    network:
      - name: net
        input: STATES
        layers: [256, 256, 256]  # Simple feedforward
        activations: elu
    output: ACTIONS
  value:  # Critic (not used in hybrid approach)
    class: DeterministicMixin
    clip_actions: False
    network:
      - name: net
        input: STATES
        layers: [256, 256, 256]
        activations: elu
    output: ONE

memory:
  class: RandomMemory
  memory_size: -1

agent:
  class: PPO
  rollouts: 128
  learning_epochs: 1  # REDUCED: Minimal learning
  mini_batches: 8
  discount_factor: 0.99
  lambda: 0.95
  learning_rate: 1.0e-06  # VERY LOW: Minimal learning
  state_preprocessor: RunningStandardScaler
  state_preprocessor_kwargs: null
  value_preprocessor: RunningStandardScaler
  value_preprocessor_kwargs: null
  random_timesteps: 0
  learning_starts: 0
  grad_norm_clip: 1.0
  ratio_clip: 0.2
  value_clip: 0.2
  clip_predicted_values: True
  entropy_loss_scale: 0.0  # NO exploration
  value_loss_scale: 0.0  # NO value learning
  kl_threshold: 0.0
  rewards_shaper_scale: 1.0
  time_limit_bootstrap: False
  experiment:
    directory: "snapfit_lab"
    experiment_name: "hybrid_deterministic"
    write_interval: auto
    checkpoint_interval: 0  # NO CHECKPOINTS

trainer:
  class: SequentialTrainer
  timesteps: 1000000  # REDUCED: Shorter training
  environment_info: log
  checkpoint_interval: 0  # NO CHECKPOINTS
  write_interval: 1000  # Less frequent logging
